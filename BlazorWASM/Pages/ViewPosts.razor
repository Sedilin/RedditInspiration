@page "/ViewPosts"
@using global::Shared
@using HttpClients.ClientInterfaces
@inject IPostService postService
@using UIComponents
@inject NavigationManager navMgr

<h3>Todos</h3>

<div>
    <button @onclick="LoadTodos">Load</button>
</div>

@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No Posts to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Post ID</th>
            <th>Owner</th>
            <th>Title</th>
            <th>Show more</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in posts)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Owner.UserName</td>
                <td>@item.Title</td>
                <td><button @onclick="() => OpenPopup(item)">Show more</button></td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}
<Modal ShowModal="showModal">
    <h4>@test.Title</h4>
    <p>@test.Body</p>
    <button @onclick="@Proceed">Wonderful</button>
</Modal>

@code {
    private IEnumerable<Post>? posts;
    private string msg = "";
    private Post test = new(new User(), "null", "null");

    private async Task LoadTodos()
    {
        try
        {
            posts = await postService.GetAsync(null, null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    private bool showModal = false;

    private void Proceed()
    {
        showModal = false;
        navMgr.NavigateTo("/ViewPosts");
    }

    private void OpenPopup(Post post)
    {
        test = post;
        showModal = true;
    }
}